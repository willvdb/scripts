// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Using @vegardit's prisma dto generator (that's what the nestjsDto and annotations are). docs here: https://github.com/vegardit/prisma-generator-nestjs-dto

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../src/common/dto/generated"
  outputToNestJsResourceStructure = "false"
  exportRelationModifierClasses   = "true"
  reExport                        = "false"
  createDtoPrefix                 = "Create"
  updateDtoPrefix                 = "Update"
  dtoSuffix                       = "Dto"
  entityPrefix                    = ""
  entitySuffix                    = ""
  fileNamingStyle                 = "camel"
}

model User {
  id          Int      @id @default(autoincrement())
  ///@DtoReadOnly
  createdAt   DateTime @default(now())
  name        String
  email       String   @unique
  username    String   @unique
  roles       Role[]
  preferences Json     @default("{}")
}

enum Role {
  SUPERADMIN
  ADMIN
  ANALYST
}

enum Permission {
  USER_CREATE
  USER_READ
  USER_UPDATE
  USER_DELETE
  COMPANY_CREATE
  COMPANY_READ
  COMPANY_UPDATE
  COMPANY_DELETE
  ROLE_PERMISSION_CREATE
  ROLE_PERMISSION_READ
  ROLE_PERMISSION_UPDATE
  ROLE_PERMISSION_DELETE
}

model RolePermission {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  role       Role
  permission Permission
}
